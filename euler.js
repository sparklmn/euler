// My Project Euler

(function() {

/** 1 Multiples of 3 and 5
* If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
* Find the sum of all the multiples of 3 or 5 below 1000.
*/
var e1 = function(){
  var sum = 0;
  for(var i = 0; i < 1000; i++){
    if ((i%5 === 0) || (i%3 === 0)) {
      sum += i; 
    }
  }
  return sum;//233168
}

/** 2 Even Fibonacci numbers
* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
var e2 = function(){
  var prev = 1, curr = 2, next, sum = 2;
  do{
    next = prev + curr;
    if(next%2 === 0){
        sum += next;
    }
    prev = curr;
    curr = next;
  }while(next < 4000000); 
  return sum;//4613732
}

/* 3 Largest prime factor
* The prime factors of 13195 are 5, 7, 13 and 29.
* What is the largest prime factor of the number 600851475143 ?
*/
var e3 = function () {
	var n = 600851475143, i = 2;
	while (i < n){
		if (n % i === 0){
			n /= i;
		}else{
			i++;
		}
	}
	return n;//6857 (600851475143 = 71 x 839 x 1471 x 6857)
}

/* 4 Largest palindrome product
* A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91  99.
* Find the largest palindrome made from the product of two 3-digit numbers.
*/
var e4 = function () {
	var isPalindrome = function(num){
		var str = num.toString(), reverseStr = str.split("").reverse().join("");
		return (str === reverseStr) ? true : false; 
	};
    var curr = 0, result = 0;
	for(var i = 999; i >= 100; i-=1){
		for(var j = 999; j >= 100; j-=1){
			curr = i*j;	
		  	if(isPalindrome(curr) && (curr > result)){
	          result = curr;//906609 (906609 = 993 * 913)
		  };
		}
	}
	return result;
}

})